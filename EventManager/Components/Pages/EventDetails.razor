@page "/event-details/{eventId:int}"
@using EventManager.Models

<h2>Detalhes do Evento</h2>

@if (selectedEvent == null)
{
    <p class="text-danger">Erro: Evento não encontrado.</p>
    <NavLink class="btn btn-secondary mt-2" href="/events">
        Voltar para Lista de Eventos
    </NavLink>
}
else
{
    <div class="event-details">
        <h3>@selectedEvent.Name</h3>
        <p><strong>Data:</strong> @selectedEvent.Date.ToLongDateString()</p>
        <p><strong>Local:</strong> @selectedEvent.Location</p>

        <NavLink class="btn btn-success" href="@($"/register/{eventId}")">
            Registrar-se
        </NavLink>

        <NavLink class="btn btn-secondary mt-2" href="/events">
            Voltar para Lista de Eventos
        </NavLink>
    </div>
}

@code {
    [Parameter] public int eventId { get; set; }
    private EventModel? selectedEvent;

    protected override void OnInitialized()
    {
        selectedEvent = GetEventById(eventId);
    }

    private EventModel? GetEventById(int id)
    {
        var events = new List<EventModel>
        {
            new EventModel { Id = 1, Name = "Tech Conference 2025", Date = new DateTime(2025, 06, 20), Location = "São Paulo" },
            new EventModel { Id = 2, Name = "Startup Meetup", Date = new DateTime(2025, 07, 10), Location = "Rio de Janeiro" }
        };

        return events.FirstOrDefault(e => e.Id == id);
    }
}
