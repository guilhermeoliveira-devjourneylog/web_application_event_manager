@page "/event-details/{eventId:int}"
@using EventManager.Models
@using EventManager.Data
@inject EventData EventData

<h2>Event Details</h2>

@if (selectedEvent is null)
{
    <p class="text-danger">Error: Event not found.</p>
    <NavLink class="btn btn-secondary mt-2" href="/events">
        Back to Events List
    </NavLink>
}
else
{
    <div class="event-details">
        <h3>@selectedEvent.Name</h3>
        <p><strong>Date:</strong> @selectedEvent.Date.ToLongDateString()</p>
        <p><strong>Location:</strong> @selectedEvent.Location</p>

        <NavLink class="btn btn-success" href="@($"/register/{eventId}")">
            Register
        </NavLink>

        <NavLink class="btn btn-secondary mt-2" href="/events">
            Back to Events List
        </NavLink>
    </div>
}

@code {
    [Parameter] public int eventId { get; set; }
    private EventModel? selectedEvent;

    protected override async Task OnInitializedAsync()
    {
        selectedEvent = await EventData.GetEventByIdAsync(eventId);
    }
}
